{"version":3,"sources":["App.js","connectionbar/ConnectionBar.js","namecard/NameCard.js","slideexplainations/slidepanels/OnePanel.js","slideexplainations/slidepanels/tracker/TrackerDot.js","slideexplainations/slidepanels/tracker/Tracker.js","slideexplainations/slidepanels/SlidePanels.js","slideexplainations/tags/Tags.js","slideexplainations/SlideExplainations.js","contentcontainer/ContentContainer.js","index.js"],"names":["App","SpeedChanger","state","stick","stick_it","window","pageYOffset","sticky","setState","golinkedin","open","props","linkedin","gogithub","github","id","className","this","onClick","header","document","getElementById","offsetTop","onresize","onscroll","React","Component","NameCard","loading","error","show","data","dataimage","render_putin","JSON","stringify","alt","login","src","html_url","name","location","bio","fetch","then","response","json","jsondata","avatar_url","blob","images","URL","createObjectURL","catch","e","OnePanel","content","TrackerDot","css_classes","go_to_slide","mypanelnum","currentpanel","Tracker","render_getDots","i","finale","last_index","push","SlidePanels","contents","length","slide_left","slide_right","Tags","render_tag","tags","map","v","SlideExplainations","hbeatbox","title","width","height","repository","explaination","test","tt","style","fontWeight","ContentContainer","background","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c59a586c.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport './App.css';\n\nfunction App({ login }) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); \n\n  useEffect(() => {\n    if(!login) return;\n    setLoading(true);\n    fetch(`https://api.github.com/users/${login}`)\n      .then((response) => response.json())\n      .then(setData)\n      .then(() => setLoading(false))\n      .catch(setError);\n  }, [login]);\n\n  if(loading) return <h1>Loading...</h1>;\n  if(error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n  if(!data) return null;\n\n  return (\n    <div>\n      <h1>{data.name}</h1>\n      <p>{data.login}</p>\n      <img alt = {data.login} src = {data.avatar_url} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\r\nimport './ConnectionBar.css';\r\n\r\nexport default class SpeedChanger extends React.Component{\r\n    /**\r\n     * As a connection bar, I:\r\n     *  - put a bar in the container with websites logos.\r\n     *  - recieve http addresses from @props and link them\r\n     *      to the corresponding logos.\r\n     * I support: \r\n     *  -this.props.linkedin\r\n     *  -this.props.github\r\n     */\r\n    state = {\r\n        stick: \"\"\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div id = \"sticktop\" className = {\"the-bar \"  + this.state.stick}>\r\n                <div className = {\"linkedin icons\"} onClick = {this.golinkedin}></div>\r\n                <div className = \"github icons\" onClick = {this.gogithub}></div>\r\n                <div className = \"sayhi\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        var header = document.getElementById(\"sticktop\");\r\n        this.sticky = header.offsetTop;\r\n        window.onresize = () => {\r\n            this.setState({\r\n                stick: \"\"\r\n            })\r\n            this.sticky = header.offsetTop;\r\n            if(window.pageYOffset > this.sticky) \r\n                this.setState({\r\n                    stick: \"sticky\"\r\n                })\r\n        }\r\n        window.onscroll = this.stick_it;\r\n    }\r\n\r\n    stick_it = () =>{\r\n        if(window.pageYOffset > this.sticky) \r\n            this.setState({\r\n                stick: \"sticky\"\r\n            })\r\n        else\r\n            this.setState({\r\n                stick: \"\"\r\n            })\r\n    }\r\n\r\n    golinkedin = () => {\r\n        window.open(this.props.linkedin)\r\n    }\r\n\r\n    gogithub = () => {\r\n        window.open(this.props.github)\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './NameCard.css';\r\n\r\nexport default class NameCard extends React.Component{\r\n    /**\r\n     * As a NameCard, I:\r\n     *  - Display basic infomation based on\r\n     *      the github login given\r\n     *  - Open a new tab to display the login's\r\n     *      github page\r\n     * I support: \r\n     *  -this.props.login\r\n     */\r\n\r\n    state = {\r\n        loading: true,\r\n        error: null, \r\n\r\n        show: \"\"\r\n    }\r\n    data = null\r\n    dataimage = null\r\n    render() {\r\n        return ( \r\n            <div className = {\"NameCard-container \" + this.state.show}>\r\n                {this.render_putin()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.login) return;\r\n        this.setState({loading: true});\r\n        fetch(`https://api.github.com/users/${this.props.login}`)\r\n            .then((response) => response.json())\r\n            .then((jsondata) => {this.data = jsondata})\r\n            .then(() => fetch(this.data.avatar_url)\r\n                    .then(response => response.blob())\r\n                    .then(images => this.dataimage = URL.createObjectURL(images)))\r\n            .then(() => this.setState({loading: false}))\r\n            .catch((e) => this.setState({error: e}));\r\n\r\n        this.setState({show: \"NameCard-container-show\"})\r\n    }\r\n\r\n    render_putin = () => {\r\n        if(this.state.loading) return <h1>Loading...</h1>;\r\n        if(this.state.error) return <pre>{JSON.stringify(this.state.error, null, 2)}</pre>;\r\n        if(!this.data) return null;\r\n        return (\r\n            <>\r\n                <img className = \"profile-pic\" alt = {this.data.login} src = {this.dataimage} onClick = {() => window.open(this.data.html_url)}/>\r\n                <div className = \"profile-info\">\r\n                    <h2>{this.data.name}</h2>\r\n                    <p>{this.data.login}</p>\r\n                    <p>{this.data.location}</p>\r\n                    <div className = \"profile-info-bio\">{this.data.bio}</div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './OnePanel.css';\r\n\r\nexport default class OnePanel extends React.Component{\r\n    /**\r\n     * As OnePanel I:\r\n     *  - can contain single content passed by SlidePanels @props\r\n     * I support: \r\n     *  -this.props.content\r\n     */\r\n\r\n\r\n    render() {\r\n        return ( \r\n            <div className = \"OnePanel-container\">\r\n                {this.props.content}\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\n","import React from 'react';\r\nimport './TrackerDot.css';\r\n\r\nexport default class TrackerDot extends React.Component{\r\n    /**\r\n     * As TrackerDot I:\r\n     *  - track which panel SlidePanel is displaying\r\n     * I support: \r\n     *  -this.props.mypanelnum\r\n     *  -this.props.currentpanel\r\n     */\r\n    css_classes = [\"TrackerDot-off\", \"TrackerDot-on\"]\r\n\r\n    render() {\r\n        return ( \r\n            <div onClick = {this.go_to_slide} className = \r\n                {\"TrackerDot \" + this.css_classes[this.props.mypanelnum === this.props.currentpanel ? 1 : 0]}>\r\n                    {/* {this.props.mypanelnum === this.props.currentpanel ? 1 : 0} */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    go_to_slide = () => {\r\n        this.props.go_to_slide(this.props.mypanelnum)\r\n    }\r\n\r\n    \r\n}\r\n\r\n","import React from 'react';\r\nimport './Tracker.css';\r\nimport TrackerDot from './TrackerDot';\r\n\r\nexport default class Tracker extends React.Component{\r\n    /**\r\n     * As Tracker I:\r\n     *  - track which panel SlidePanel is displaying\r\n     * I support: \r\n     *  -this.props.last_index\r\n     *  -this.props.currentpanel\r\n     */\r\n\r\n\r\n    render() {\r\n        return ( \r\n            <div className = \"Tracker-container\">\r\n                {this.render_getDots()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render_getDots = () => {\r\n        var i\r\n        var finale = []\r\n        for(i = 0; i <= this.props.last_index; i++)\r\n            finale.push(<TrackerDot mypanelnum = {i} \r\n                currentpanel = {this.props.currentpanel}\r\n                go_to_slide = {this.props.go_to_slide}/>)\r\n        return finale\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './SlidePanels.css';\r\n\r\nimport OnePanel from \"./OnePanel\"\r\nimport Tracker from './tracker/Tracker'\r\n\r\nexport default class SlidePanels extends React.Component{\r\n    /**\r\n     * As SlidePanels I:\r\n     *  - can contain contents in multiple panels.\r\n     *  - can slide right or left in order to switch the panel\r\n     *      that is showing.\r\n     *  - can keep track, and present visually, on which panel\r\n     *      is currently on display.\r\n     *  - can go to a slide directly by clicking on the trackers\r\n     *  - recieve an list of contents in jsx from @props\r\n     * I support: \r\n     *  -this.props.contents\r\n     */\r\n\r\n    state = {\r\n        currentpanel: 0\r\n    }\r\n    last_index = this.props.contents.length - 1\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"SlidePanels-container\">\r\n                <div className = \"SlidePanels-main\">\r\n                    <div className = \"sliderbutton\" onClick = {this.slide_left}>{\"←\"}</div>\r\n                    <OnePanel content = {this.props.contents[this.state.currentpanel].content}/>\r\n                    <div className = \"sliderbutton\" onClick = {this.slide_right}>{\"→\"}</div>\r\n                </div>\r\n                <Tracker last_index = {this.last_index} currentpanel = {this.state.currentpanel}  go_to_slide = {this.go_to_slide}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    go_to_slide = (mypanelnum) => {\r\n        this.setState({\r\n            currentpanel: mypanelnum\r\n        })\r\n        this.props.go_to_slide(mypanelnum)\r\n    }\r\n\r\n    slide_left = () => {\r\n        if(this.state.currentpanel > 0){\r\n            this.setState({\r\n                currentpanel: this.state.currentpanel - 1\r\n            })\r\n            this.props.slide_left()\r\n        }\r\n    }\r\n\r\n    slide_right = () => {\r\n        if(this.state.currentpanel < this.last_index){\r\n            this.setState({\r\n                currentpanel: this.state.currentpanel + 1\r\n            })\r\n            this.props.slide_right()\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n","import React from 'react';\r\nimport './Tags.css';\r\n\r\nexport default class Tags extends React.Component{\r\n    /**\r\n     * As a Tags, I:\r\n     * \r\n     * I support: \r\n     *  -this.props.tags\r\n     */\r\n\r\n    render() {\r\n        return ( \r\n            <div className = \"Tags-container\">\r\n                {this.props.tags.map((v) => \r\n                    <div className = \"tag\">\r\n                        {v}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render_tag = () => {\r\n        this.props.tags.map((v) => \r\n            <div className = \"tag\">\r\n                v\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './SlideExplainations.css';\r\n\r\nimport SlidePanels from './slidepanels/SlidePanels'\r\nimport Tags from \"./tags/Tags\";\r\n\r\nexport default class SlideExplainations extends React.Component{\r\n    /**\r\n     * As a SlideExplainations, I:\r\n     */\r\n    state = {\r\n        currentpanel: 0\r\n    }\r\n\r\n    hbeatbox = {\r\n        title: \"Simple Beat-Machine\",\r\n        tags: [\"javascript\", \"react.js\", \"CSS\", \"HTML\"], \r\n        content: <iframe width=\"100%\" height=\"100%\" src=\"https://mtwangyugeng.github.io/hbeatbox/\" title=\"W3Schools Free Online Web Tutorials\"></iframe>,\r\n        repository: \"https://github.com/mtwangyugeng/hbeatbox\",\r\n        explaination: \"My first react project!\"\r\n    }\r\n\r\n    test = {\r\n        title: \"Placeholder\",\r\n        tags: [\"a\", \"bb\", \"ccc\", \"ddd\", \"kappaman\"], \r\n        content: <h1>SlidePanels are cool!</h1>,\r\n        repository: \"https://github.com/mtwangyugeng\",\r\n        explaination: \"This is just a placeholder to see if the slidepanels are working properly\"\r\n    }\r\n\r\n    tt = [this.hbeatbox, this.test]\r\n\r\n    render() {\r\n        return ( \r\n            <div className = \"SlideExplainations-container\">\r\n                <SlidePanels contents = {this.tt} go_to_slide = {this.go_to_slide} slide_left = {this.slide_left} slide_right = {this.slide_right}/>\r\n                <div className = \"SlideExplainations-explainations\">\r\n                    <div style = {{fontWeight:\"bold\"}}>{this.tt[this.state.currentpanel].title}</div>\r\n                    <Tags tags = {this.tt[this.state.currentpanel].tags} />\r\n                    {this.tt[this.state.currentpanel].explaination}\r\n                    <div className = \"SlideExplainations-github\" onClick = {() => window.open(\"https://github.com/mtwangyugeng/hbeatbox\")}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    go_to_slide = (mypanelnum) => {\r\n        this.setState({\r\n            currentpanel: mypanelnum\r\n        })\r\n    }\r\n\r\n    slide_left = () => {\r\n        this.setState({\r\n            currentpanel: this.state.currentpanel - 1\r\n        })\r\n    }\r\n\r\n    slide_right = () => {\r\n        this.setState({\r\n            currentpanel: this.state.currentpanel + 1\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './ContentContainer.css';\r\n\r\n// no need later\r\nimport SlideExplainations from '../slideexplainations/SlideExplainations'\r\nimport NameCard from '../namecard/NameCard'\r\nexport default class ContentContainer extends React.Component{\r\n    /**\r\n     * As a ContentContainer, I:\r\n     *  - Display the content section I am given.\r\n     * I support: \r\n     *  -this.props.sections: a list of content section Object\r\n     */\r\n\r\n    render() {\r\n        return ( \r\n            <div className = \"ContentContainer-container\">\r\n                <div className = \"ContentContainer-content\">\r\n                    <h2 className = \"ContentContainer-title\">Projects</h2>\r\n                    <div className = \"ContentContainer-section\">\r\n                        <SlideExplainations/>\r\n                    </div>\r\n                    <h2 className = \"ContentContainer-title\">Special Thanks</h2>\r\n                    <div className = \"ContentContainer-section\" style = {{background:\"black\"}}>\r\n                        <NameCard login = \"epicsteve2\"/>\r\n                        <NameCard login = \"JDong3\"/>\r\n                    </div>\r\n                    <h2 className = \"ContentContainer-title\"></h2>\r\n                    <div className = \"footer\">Copyright (c) 2021 Simon Wang</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ConnectionBar from './connectionbar/ConnectionBar'\n\nimport NameCard from './namecard/NameCard'\nimport ContentContainer from './contentcontainer/ContentContainer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <NameCard login = \"mtwangyugeng\"/>\n    {/* <NameCard login = \"epicsteve2\"/> */}\n    <ConnectionBar \n      linkedin = \"https://www.linkedin.com/in/yu-geng-wang-474553192/\"\n      github = \"https://github.com/mtwangyugeng\"\n    />\n    <ContentContainer/>\n    {/* <SlidePanels contents = {[-1,0, <iframe width=\"100%\" height=\"100%\" src=\"https://mtwangyugeng.github.io/hbeatbox/\" title=\"W3Schools Free Online Web Tutorials\"></iframe>, 2, 3, 4]} /> */}\n    {/* <App login = \"mtwangyugeng\"/> */}\n    {/* <iframe src=\"https://mtwangyugeng.github.io/hbeatbox/\" title=\"W3Schools Free Online Web Tutorials\"></iframe>  */}\n    {/* <NameCard login = \"epicsteve2\"/> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}